Script started on 2023-02-16 18:15:13-06:00 [TERM="xterm-256color" TTY="/dev/pts/10" COLUMNS="80" LINES="24"]
[?2004h[ark@vm-instunix-03] (1)$ [7mgit status[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit status
[A
[?2004lOn branch BackendDeveloper
Your branch is up to date with 'origin/BackendDeveloper'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   log[m

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mdeleted:    HashtableMap.java[m
	[31mmodified:   log[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mCHSearchBackendBD.class[m
	[31mCHSearchBackendInterface.class[m
	[31mCHSearchBackendTest.class[m
	[31mHashNode.class[m
	[31mHashtableMap.class[m
	[31mHashtableWithDuplicateKeysBD.class[m
	[31mHashtableWithDuplicateKeysInterface.class[m
	[31mMapADT.class[m
	[31mPostBD.class[m
	[31mPostInterface.class[m
	[31mPostReaderBD.class[m
	[31mPostReaderInterface.class[m

[?2004h[ark@vm-instunix-03] (2)$ git add CHSearchBackendBD.k[Kjava
[?2004l[?2004h[ark@vm-instunix-03] (3)$ gt[Kit add CHSE[KearchBackendInterface.java
[?2004l[?2004h[ark@vm-instunix-03] (4)$ git add CHSeat[KrchBackendTest.cl[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kls 
[?2004lCHSearchBackendBD.class                    log
CHSearchBackendBD.java                     MapADT.class
CHSearchBackendInterface.class             MapADT.java
CHSearchBackendInterface.java              PostBD.class
CHSearchBackendTest.class                  PostBD.java
CHSearchBackendTest.java                   PostInterface.class
HashNode.class                             PostInterface.java
HashNode.java                              PostReaderBD.class
HashtableMap.class                         PostReaderBD.java
HashtableWithDuplicateKeysBD.class         PostReaderInterface.class
HashtableWithDuplicateKeysBD.java          PostReaderInterface.java
HashtableWithDuplicateKeysInterface.class  role.txt
HashtableWithDuplicateKeysInterface.java
[?2004h[ark@vm-instunix-03] (5)$ [7mgit log -1[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit log -1
[A
[?2004l[?1h=[33mcommit dcda6629caffd7ffccb36f39643da598fa61bdb4[m[33m ([m[1;36mHEAD -> [m[1;32mBackendDeveloper[m[33m, [m[1;31morigi[m [33m[m[33m[m[1;36m[m[1;32m[m[33m[m[1;31mn/BackendDeveloper[m[33m)[m[m
Author: Ark Dutt <dutt3@wisc.edu>[m
Date:   Thu Feb 16 18:04:54 2023 -0600[m
[m
    uploading log[m
[K[?1l>[?2004h[ark@vm-instunix-03] (6)$ [7mrm -f *.class[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Crm -f *.class
[A
[?2004l[?2004h[ark@vm-instunix-03] (7)$ [7mls[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls
[A
[?2004lCHSearchBackendBD.java                    MapADT.java
CHSearchBackendInterface.java             PostBD.java
CHSearchBackendTest.java                  PostInterface.java
HashNode.java                             PostReaderBD.java
HashtableWithDuplicateKeysBD.java         PostReaderInterface.java
HashtableWithDuplicateKeysInterface.java  role.txt
log
[?2004h[ark@vm-instunix-03] (8)$ [7mjavac *.java[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cjavac *.java
[A
[?2004lHashtableWithDuplicateKeysBD.java:12: error: cannot find symbol
public class HashtableWithDuplicateKeysBD<KeyType, ValueType> extends HashtableMap<KeyType, List<ValueType>> implements HashtableWithDuplicateKeysInterface<KeyType, ValueType> {
                                                                      ^
  symbol: class HashtableMap
HashtableWithDuplicateKeysBD.java:12: error: HashtableWithDuplicateKeysBD is not abstract and does not override abstract method getCapacity() in MapADT
public class HashtableWithDuplicateKeysBD<KeyType, ValueType> extends HashtableMap<KeyType, List<ValueType>> implements HashtableWithDuplicateKeysInterface<KeyType, ValueType> {
       ^
Note: HashtableWithDuplicateKeysBD.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
2 errors
[?2004h[ark@vm-instunix-03] (9)$ g[Ktouch Hsa[K[KashtableMap.java
[?2004l[?2004h[ark@vm-instunix-03] (10)$ mnan[K[K[K[Knano HashtableMap.java
[?2004l[?2004h[?1049h[22;0;0t[1;24r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[22;34H(B[0;7m[ Reading... ](B[m[22;33H(B[0;7m[ Read 0 lines ](B[m[H(B[0;7m  GNU nano 6.2                    HashtableMap.java                             [1;79H(B[m[23d(B[0;7m^G(B[m Help[14G(B[0;7m^O(B[m Write Out (B[0;7m^W(B[m Where Is  (B[0;7m^K(B[m Cut[53G(B[0;7m^T(B[m Execute   (B[0;7m^C(B[m Location[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^R(B[m Read File (B[0;7m^\(B[m Replace   (B[0;7m^U(B[m Paste     (B[0;7m^J(B[m Justify   (B[0;7m^/(B[m Go To Line[2d[?12l[?25h[?25l[22d[K[1;53H(B[0;7m*[79G(B[m[3;5H(B[0;1m[34m/**[4;5H[1K * retrieve this collection's capacity (size of its underlying array)[5;5H[1K *[6d[1K * @return the size of the hashtable[7;5H[1K */[8;5H(B[0m[36mpublic[39m(B[m [32mint[39m(B[m getCapacity() {[9;9H[31mreturn[39m(B[m tableSize;[10;5H}[11d}[12d[?12l[?25h[?25l[?12l[?25h[A[?25l[?12l[?25h[A[?25l[?12l[?25h[A[?25l[?12l[?25h[A[?25l[?12l[?25h[A[?25l[?12l[?25h[5d[?25l[?12l[?25h[2;9H}[3;5H    size = 0;[4d    }[K[5d[K[6d[K[7d    (B[0;1m[34m/**[8;5H[1K * retrieve the number of keys stored within this collection[9;5H[1K * @return the number of key-value pairs present[10;5H[1K */[11d[39m(B[m    [36mpublic[39m(B[m [32mint[39m(B[m getSize() {[12;9H[31mreturn[39m(B[m size;[13;5H}[16d(B[0;1m[34m/**[17;5H[1K * retrieve this collection's capacity (size of its underlying array)[18;5H[1K *[19d[1K * @return the size of the hashtable[20;5H[1K */[21;5H(B[0m[36mpublic[39m(B[m [32mint[39m(B[m getCapacity() {[2d[?25l[?12l[?25h7[2;21r8[3T[1;24r[3;9H[31mfor[39m(B[m ([32mint[39m(B[m i = 0; i < buckets.length; i++) {[4;13Hbuckets[i] = [33mnull[39m(B[m;[2d[?25l[?12l[?25h7[2;22r8[4T[1;24r[2;5H(B[0;1m[34m/**[3;5H[1K * remove all key-value pairs from this collection[4;5H[1K */[5;5H(B[0m[36mpublic[39m(B[m [32mvoid[39m(B[m clear() {[2d[?25l[?12l[?25h7[2;21r8[3T[1;24r[2;9H[31mreturn[39m(B[m value;[3;5H}[A[?25l[?12l[?25h7[2;21r8[2T[1;24r[2;13H}[3;9H}[A[?25l[?12l[?25h7[2;22r8[5T[1;24r[2;13H}[4d[34m//if reaches at the end of the array, then it wraps to the beginnin[39m(B[0;7m>[5;13H(B[0m[31mif[39m(B[m(index == buckets.length-1) {[6;17Hindex = 0;[2d[?25l[?12l[?25h7[2;21r8M[1;24r[2;17H[31mbreak[39m(B[m;[?25l[?12l[?25h7[2;21r8[4T[1;24r[2;17H}[3;13H}[4dindex = (index + 1) % getCapacity();[5;13H[31mif[39m(B[m(index == startIndex) {[2d[?25l[?12l[?25h7[2;21r8[3T[1;24r[2;21Hbuckets[index] = sentObj;[3;21Hsize--;[4;21H[31mreturn[39m(B[m value;[2d[?25l[?12l[?25h7[2;21r8[2T[1;24r[2;17H[31mif[39m(B[m (buckets[index].getKey().equals(key)) {[3;21Hvalue = buckets[index].getValue();[A[?25l[?12l[?25h7[2;21r8[4T[1;24r[2;9HValueType value = [33mnull[39m(B[m;[3;9H[32mint[39m(B[m startIndex = index;[4;9H[31mwhile[39m(B[m(index<buckets.length) {[5;13H[31mif[39m(B[m(buckets[index] != [33mnull[39m(B[m) {[2d[?25l[?12l[?25h7[2;22r8[5T[1;24r[3;9H[31mif[39m(B[m(key == [33mnull[39m(B[m || containsKey(key) == [33mfalse[39m(B[m) {[4;13H[31mthrow[39m(B[m [32mnew[39m(B[m NoSuchElementException([31m"ERROR! The key is not stored in t[39m(B[0;7m>[5;9H(B[m}[6d[32mint[39m(B[m index = hashFunction(key);[2d[?25l[?12l[?25h7[2;21r8[2T[1;24r[2;5H(B[0;1m[34m[1K */[3;5H(B[0m[36mpublic[39m(B[m ValueType remove(KeyType key) [36mthrows[39m(B[m NoSuchElementException {[A[?25l[?12l[?25h7[2;21r8[3T[1;24r[2;5H(B[0;1m[34m[1K * @param key the key who key-value pair should be removed[3;5H[1K * @return the value of the removed key-value pair[4;5H[1K * @throws NoSuchElementException when key is not stored in this collection[2d[39m(B[m[?25l[?12l[?25h7[2;21r8[4T[1;24r[3;5H(B[0;1m[34m/**[4;5H[1K * remove the mapping for a given key from this collection[5;5H[1K *[2d[39m(B[m[?25l[?12l[?25h7[2;21r8[4T[1;24r[2;9H}[3d[31mreturn[39m(B[m [33mnull[39m(B[m;[4;5H}[2d[?25l[?12l[?25h7[2;21r8[4T[1;24r[2;13H[34m//if reaches at the end of the array, then it wraps to the beginnin[39m(B[0;7m>[3;13H(B[0m[31mif[39m(B[m(index == buckets.length-1) {[4;17Hindex = 0;[5;13H}[2d[?25l[?12l[?25h7[2;21r8[2T[1;24r[2;13Hindex = (index + 1) % tableSize;[?25l[?12l[?25h7[2;21r8[2T[1;24r[2;21H[31mreturn[39m(B[m buckets[index].getValue();[3;13H}[A[?25l[?12l[?25h7[2;21r8[3T[1;24r[2;9H[32mint[39m(B[m index = hashFunction(key);[3;9H[31mwhile[39m(B[m(index < buckets.length) {[4;13H[31mif[39m(B[m (buckets[index] != [33mnull[39m(B[m && buckets[index].getKey().equals(key)) {[2;1H[?25l[?12l[?25h7[2;21r8M[1;24r[2;9H}[?25l[?12l[?25h7[2;22r8[10T[1;24r[2;5H(B[0;1m[34m[1K *The get method returns the value associated with the key entered.[3;5H[1K *[4d[1K * @param key key, whose value should to be returned[5;5H[1K * @return the value associated with the key entered[6;5H[1K * @throws NoSuchElementException when key is not stored in this collection[7;5H[1K */[8;5H(B[0m[36mpublic[39m(B[m ValueType get(KeyType key) [36mthrows[39m(B[m NoSuchElementException {[10;9H[31mif[39m(B[m(containsKey(key) == [33mfalse[39m(B[m) {[11;13H[31mthrow[39m(B[m [32mnew[39m(B[m NoSuchElementException([31m"ERROR! The key is not stored in t[39m(B[0;7m>[22;1H(B[m[K[2d[?25l[?12l[?25h7[2;21r8M[1;24r[2;5H(B[0;1m[34m/**[39m(B[m[?25l[?12l[?25h7[2;21r8[6T[1;24r[2;13H[31mreturn[39m(B[m [33mfalse[39m(B[m;[3;9H}[4d[31mreturn[39m(B[m [33mfalse[39m(B[m;[5;5H}[2d[?25l[?12l[?25h7[2;22r8[6T[1;24r[2;13H[31mif[39m(B[m(buckets[index] != [33mnull[39m(B[m && buckets[index].getKey().equals(key) ) {[3;17H[31mreturn[39m(B[m [33mtrue[39m(B[m;[4;13H}[5dindex++;[6;9H}[7d[31mif[39m(B[m(key == [33mnull[39m(B[m) {[2d[?25l[?12l[?25h7[2;21r8[3T[1;24r[3;9H[32mint[39m(B[m index=0;[4;9H[31mwhile[39m(B[m(index<buckets.length) {[2d[?25l[?12l[?25h7[2;22r8[10T[1;24r[2;9H}[3;5H}[5d(B[0;1m[34m/**[6;5H[1K * The containsKey method checks whether a key maps to a value within this [39m(B[0;7m>[7;5H(B[0;1m[34m[1K *[8d[1K * @param key the key, which needs to be checked[9;5H[1K * @return true if the key maps to a value within the collection, otherwise[39m(B[0;7m>[10;5H(B[0;1m[34m[1K */[11;5H(B[0m[36mpublic[39m(B[m [32mboolean[39m(B[m containsKey(KeyType key) {[22d[K[2d[?25l[?12l[?25h7[2;22r8[10T[1;24r[2;9HHashNode<KeyType, ValueType>[] oldBuckets = buckets;[3;9Hbuckets = [32mnew[39m(B[m HashNode[tableSize];[4;9Hsize = 0;[5;9H[31mfor[39m(B[m([32mint[39m(B[m i=0; i<oldBuckets.length; i++) {[6;13H[31mif[39m(B[m(oldBuckets[i] == [33mnull[39m(B[m) {[7;17H[31mcontinue[39m(B[m;[8;13H}[9dKeyType newKey = oldBuckets[i].getKey();[10;13HValueType newVal = oldBuckets[i].getValue();[11;13Hput(newKey, newVal);[2d[?25l[?12l[?25h7[2;21r8[4T[1;24r[2;5H(B[0;1m[34m[1K */[3;5H(B[0m[36mpublic[39m(B[m [32mvoid[39m(B[m rehash() {[5;9HtableSize = 2*tableSize;[2d[?25l[?12l[?25h[8G[1K size++;[3d[K[4;9H[31mif[39m(B[m(Double.valueOf(size) / Double.valueOf(tableSize) >= loadFactor) {[5;9H    rehash();[K[6;9H}[K[7;5H}[K[8d[K[9;5H(B[0;1m[34m/**[39m(B[m[K[10;5H(B[0;1m[34m[1K * The rehash method resizes the array when the load factor exceeds 0.7.[11;5H[1K * In this method, the array size is doubled and the key-value pairs are re[39m(B[0;7m>[12;5H(B[0;1m[34m[1K * size of the array. The method calls the put method in order to redistrib[39m(B[0;7m>[13;5H(B[0;1m[34m[1K * resized array[39m(B[m[K[14;5H(B[0;1m[34m[1K */[39m(B[m[K[15;5H[36mpublic[39m(B[m [32mvoid[39m(B[m rehash() {[K[16d[K[17;5H    tableSize = 2*tableSize;[18;9HHashNode<KeyType, ValueType>[] oldBuckets = buckets;[19;5H    buckets = [32mnew[39m(B[m HashNode[tableSize];[20;8H[1K size = 0;[K[21;8H[1K [31mfor[39m(B[m([32mint[39m(B[m i=0; i<oldBuckets.length; i++) {[2d[?25l[?12l[?25h7[2;21r8[2T[1;24r[3;9Hbuckets[index] = sentObj;[A[?25l[?12l[?25h7[2;21r8[2T[1;24r[2;17Hindex++;[3;9H}[A[?25l[?12l[?25h[2;9H}[K[3d[K[4;9H[31mif[39m(B[m(containsKey(key) == [33mtrue[39m(B[m) {[5;9H    [31mthrow[39m(B[m [32mnew[39m(B[m IllegalArgumentException([31m"The keys are duplicate of one a[39m(B[0;7m>[6;9H(B[m}[K[8dHashNode <KeyType,ValueType> sentObj = [32mnew[39m(B[m HashNode<>(key, value);[K[9;9H[32mint[39m(B[m index = hashFunction(key);[10;9H[31mwhile[39m(B[m(buckets[index] != [33mnull[39m(B[m) {[11;12H[1K [31mif[39m(B[m(index< buckets.length) {[13;16H[1K [34m//if reaches at the end of the array, then it wraps to the begi[39m(B[0;7m>[14;16H(B[m[1K [31mif[39m(B[m(index == buckets.length-1) {[K[15;20H[1K index = 0;[K[16;16H[1K }[K[17;12H[1K }[K[18d  [1K index++;[19;5H    }[K[21dbuckets[index] = sentObj;[2d[?25l[?12l[?25h7[2;21r8[3T[1;24r[3;9H[31mif[39m(B[m(key == [33mnull[39m(B[m || value == [33mnull[39m(B[m) {[4;13H[31mthrow[39m(B[m [32mnew[39m(B[m IllegalArgumentException([31m"key or value is [33mnull[31m!"[39m(B[m);[2d[?25l[?12l[?25h7[2;21r8[6T[1;24r[2;5H(B[0;1m[34m[1K * @param key the key to be added[3;5H[1K * @param value the value to be added[4;5H[1K * @throws IllegalArgumentException when the key or value is null, or if th[39m(B[0;7m>[5;5H(B[0;1m[34m[1K * duplicate of one already stored[6;5H[1K */[7;5H(B[0m[36mpublic[39m(B[m [32mvoid[39m(B[m put(KeyType key, ValueType value) [36mthrows[39m(B[m IllegalArgumentExcepti(B[0;7m>[2;1H(B[m[?25l[?12l[?25h[2;27H(B[0;1m[34mwhose index you want to find[3;9Hreturn the index[39m(B[m[K[4;7H(B[0;1m[34m/[39m(B[m[K[5d    [36mprivate[39m(B[m [32mint[39m(B[m hashFunction(KeyType key) {[6;8H[1K [31mreturn[39m(B[m Math.abs(key.hashCode()%tableSize);[7;5H}[K[9d(B[0;1m[34m/**[39m(B[m[K[10;5H(B[0;1m[34m[1K *The put method adds a new key-value pair/mapping to this collection. It t[39m(B[0;7m>[11;5H(B[0;1m[34m[1K * if the key or value are null, or if the keys are duplicate of one alread[39m(B[0;7m>[12;5H(B[0;1m[34m[1K * If the load factor exceeds by 0.7, then it rehashes.[13;5H[1K *[39m(B[m[K[14d(B[0;1m[34m[1K * @param key the key to be added[39m(B[m[K[15;5H(B[0;1m[34m[1K * @param value the value to be added[16;5H[1K * @throws IllegalArgumentException when the key or value is null, or if th[39m(B[0;7m>[17;5H(B[0;1m[34m[1K * duplicate of one already stored[39m(B[m[K[18;5H(B[0;1m[34m[1K */[39m(B[m[K[19;5H[36mpublic[39m(B[m [32mvoid[39m(B[m put(KeyType key, ValueType value) [36mthrows[39m(B[m IllegalArgumentExcepti(B[0;7m>[20;1H(B[m[K[21;9H[31mif[39m(B[m(key == [33mnull[39m(B[m || value == [33mnull[39m(B[m) {[2d[?25l[?12l[?25h7[2;21r8[7T[1;24r[2;9H[34m// with default capacity = 8[3;9H[32mthis[39m(B[m(8);[4;5H}[6d(B[0;1m[34m/**[7;5H[1K * hashFunction method calculates the intended index of the given key.[8;5H[1K *[2d[39m(B[m[?25l[?12l[?25h7[2;21r8[10T[1;24r[2;5HHashNode <KeyType,ValueType> sentObj = [32mnew[39m(B[m HashNode<KeyType, ValueType>(obj(B[0;7m>[4;5H(B[m@SuppressWarnings([31m"unchecked"[39m(B[m)[5;5H[36mpublic[39m(B[m HashtableMap([32mint[39m(B[m capacity) {[6;9H[32mthis[39m(B[m.tableSize = capacity;[7;9H[32mthis[39m(B[m.buckets = [32mnew[39m(B[m HashNode[capacity];[8;9H[32mthis[39m(B[m.size = 0;[9;5H}[11d[36mpublic[39m(B[m HashtableMap() {[2d[?25l[?12l[?25h(B[0;1m[34m * remove(key), clear(), getSize(), getCapacity() methods by implementing MapADT[3;1H *[4d * @author Ark Dutt[39m(B[m[K[5d(B[0;1m[34m */[39m(B[m[K[6d[K[7d[36mimport[39m(B[m java.util.NoSuchElementException;[K[8d[K[9d[36mpublic[39m(B[m [36mclass[39m(B[m HashtableMap<KeyType, ValueType> [36mimplements[39m(B[m MapADT<KeyType, ValueT(B[0;7m>[11;6H(B[0m[36mrotected[39m(B[m HashNode<KeyType, ValueType>[] buckets; [34m//array of integers[12;5H[36mprivate[39m(B[m [32mint[39m(B[m tableSize; [34m//capacity[13d[39m(B[m[K[14;5H[36mprivate[39m(B[m [32mdouble[39m(B[m loadFactor = 0.7;[16;5H[36mprivate[39m(B[m [32mint[39m(B[m size; [34m//current number of key-value pairs in a hashtable[17d[39m(B[m    HashNode<KeyType, ValueType> obj = [32mnew[39m(B[m HashNode(-50000000, -50000000);[18d    HashNode <KeyType,ValueType> sentObj = [32mnew[39m(B[m HashNode<KeyType, ValueType>(obj(B[0;7m>[19;1H(B[m[K[20d    @SuppressWarnings([31m"unchecked"[39m(B[m)[21d    [36mpublic[39m(B[m HashtableMap([32mint[39m(B[m capacity) {[2d[?25l[?12l[?25h7[2;22r8[3T[1;24r[3;1H(B[0;1m[34m/**[4d * The HashtableMap class uses hashFunction(key), put(key,value), rehash(), con[39m(B[0;7m>[2;1H(B[m[?25l[?12l[?25h7[2;22r8[6T[1;24r[2;1H[34m// --== CS400 Project One File Header ==--[3d// Name: Ark Dutt[4d// CSL Username: ark[5d// Email: dutt3@wisc.edu[6d// Lecture #: 004 15:30-16:20[7d// Notes to Grader: <any optional extra notes to your grader>[2d[39m(B[m[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[3d[?25l[?12l[?25h[5d[?25l[?12l[?25h[8d[?25l[?12l[?25h[9d[?25l[?12l[?25h[12d[?25l[?12l[?25h[14d[?25l[?12l[?25h[18d[?25l[?12l[?25h[2;22r[22;1H[5S[1;24r[18;5H[36mprivate[39m(B[m [32mdouble[39m(B[m loadFactor = 0.7;[20;5H[36mprivate[39m(B[m [32mint[39m(B[m size; [34m//current number of key-value pairs in a hashtable[21;5H[39m(B[mHashNode<KeyType, ValueType> obj = [32mnew[39m(B[m HashNode(-50000000, -50000000);[?25l[?12l[?25h7[2;22r8[22d[4S[1;24r[18;5HHashNode <KeyType,ValueType> sentObj = [32mnew[39m(B[m HashNode<KeyType, ValueType>(obj(B[0;7m>[20;5H(B[m@SuppressWarnings([31m"unchecked"[39m(B[m)[21;5H[36mpublic[39m(B[m HashtableMap([32mint[39m(B[m capacity) {[?25l[?12l[?25h7[2;22r8[22d[11S[1;24r[11;9H[32mthis[39m(B[m.tableSize = capacity;[12;9H[32mthis[39m(B[m.buckets = [32mnew[39m(B[m HashNode[capacity];[13;9H[32mthis[39m(B[m.size = 0;[14;5H}[16d[36mpublic[39m(B[m HashtableMap() {[17;9H[34m// with default capacity = 8[18;9H[32mthis[39m(B[m(8);[19;5H}[21d(B[0;1m[34m/**[39m(B[m[?25l[?12l[?25h7[2;22r8[22d[8S[1;24r[14;5H(B[0;1m[34m[1K * hashFunction method calculates the intended index of the given key.[15;5H[1K *[16d[1K * @param key the key whose index you want to find[17;5H[1K * @return the index[18;5H[1K */[19;5H(B[0m[36mprivate[39m(B[m [32mint[39m(B[m hashFunction(KeyType key) {[20;9H[31mreturn[39m(B[m Math.abs(key.hashCode()%tableSize);[21;5H}[?25l[?12l[?25h[8;19r[19;1H[3S[1;24r[2;5H(B[0;1m[34m[1K * @return the index[39m(B[m[K[3;5H(B[0;1m[34m[1K */[39m(B[m[K[4;5H[36mprivate[39m(B[m [32mint[39m(B[m hashFunction(KeyType key) {[K[5;9H[31mreturn[39m(B[m Math.abs(key.hashCode()%tableSize);[8;5H(B[0;1m[34m/**[9;5H[1K *The put method adds a new key-value pair/mapping to this collection. It t[39m(B[0;7m>[10;5H(B[0;1m[34m[1K * if the key or value are null, or if the keys are duplicate of one alread[39m(B[0;7m>[11;8H(B[0;1m[34mIf the load factor exceeds by 0.7, then it rehashes.[39m(B[m[K[13;27H(B[0;1m[34mto be added[39m(B[m[K[14;9H(B[0;1m[34mparam value the value to be added[15;7H @throws IllegalArgumentException when the key or value is null, or if th[39m(B[0;7m>[16;5H(B[0;1m[34m[1K * duplicate of one already stored[39m(B[m[K[17;5H(B[0;1m[34m[1K */[18;5H(B[0m[36mpublic[39m(B[m [32mvoid[39m(B[m put(KeyType key, ValueType value) [36mthrows[39m(B[m IllegalArgumentExcepti(B[0;7m>[20;9H(B[0m[31mif[39m(B[m(key == [33mnull[39m(B[m || value == [33mnull[39m(B[m) {[K[21;12H[1K [31mthrow[39m(B[m [32mnew[39m(B[m IllegalArgumentException([31m"key or value is [33mnull[31m!"[39m(B[m);[?25l[?12l[?25h7[2;22r8[22d[7S[1;24r[15;9H}[17d[31mif[39m(B[m(containsKey(key) == [33mtrue[39m(B[m) {[18;13H[31mthrow[39m(B[m [32mnew[39m(B[m IllegalArgumentException([31m"The keys are duplicate of one a[39m(B[0;7m>[19;9H(B[m}[21dHashNode <KeyType,ValueType> sentObj = [32mnew[39m(B[m HashNode<>(key, value);[?25l[?12l[?25h7[2;22r8[22d[9S[1;24r[13;9H[32mint[39m(B[m index = hashFunction(key);[14;9H[31mwhile[39m(B[m(buckets[index] != [33mnull[39m(B[m) {[15;13H[31mif[39m(B[m(index< buckets.length) {[17;17H[34m//if reaches at the end of the array, then it wraps to the begi[39m(B[0;7m>[18;17H(B[0m[31mif[39m(B[m(index == buckets.length-1) {[19;21Hindex = 0;[20;17H}[21;13H}[?25l[?12l[?25h7[2;22r8[22d[11S[1;24r[11;17Hindex++;[12;9H}[14dbuckets[index] = sentObj;[15;9Hsize++;[17;9H[31mif[39m(B[m(Double.valueOf(size) / Double.valueOf(tableSize) >= loadFactor) {[18;13Hrehash();[19;9H}[20;5H}[21d[?25l[?12l[?25h7[2;22r8[22d
[1;24r[21;5H(B[0;1m[34m/**[39m(B[m[?25l[?12l[?25h7[2;22r8[22d[9S[1;24r[13;5H(B[0;1m[34m[1K * The rehash method resizes the array when the load factor exceeds 0.7.[14;5H[1K * In this method, the array size is doubled and the key-value pairs are re[39m(B[0;7m>[15;5H(B[0;1m[34m[1K * size of the array. The method calls the put method in order to redistrib[39m(B[0;7m>[16;5H(B[0;1m[34m[1K * resized array[17;5H[1K */[18;5H(B[0m[36mpublic[39m(B[m [32mvoid[39m(B[m rehash() {[20;9HtableSize = 2*tableSize;[21;9HHashNode<KeyType, ValueType>[] oldBuckets = buckets;[?25l[?12l[?25h7[2;22r8[22d[4S[1;24r[18;9Hbuckets = [32mnew[39m(B[m HashNode[tableSize];[19;9Hsize = 0;[20;9H[31mfor[39m(B[m([32mint[39m(B[m i=0; i<oldBuckets.length; i++) {[21;13H[31mif[39m(B[m(oldBuckets[i] == [33mnull[39m(B[m) {[?25l[?12l[?25h7[2;22r8[22d[4S[1;24r[18;17H[31mcontinue[39m(B[m;[19;13H}[20dKeyType newKey = oldBuckets[i].getKey();[21;13HValueType newVal = oldBuckets[i].getValue();[?25l[?12l[?25h7[2;22r8[22d
[1;24r[21;13Hput(newKey, newVal);[?25l[?12l[?25h7[2;22r8[22d
[1;24r[21;9H}[?25l[?12l[?25h7[2;22r8[22d[2S[1;24r[20;5H}[21d[?25l[?12l[?25h7[2;22r8[22d[8S[1;24r[14;5H(B[0;1m[34m/**[15;5H[1K * The containsKey method checks whether a key maps to a value within this [39m(B[0;7m>[16;5H(B[0;1m[34m[1K *[17d[1K * @param key the key, which needs to be checked[18;5H[1K * @return true if the key maps to a value within the collection, otherwise[39m(B[0;7m>[19;5H(B[0;1m[34m[1K */[20;5H(B[0m[36mpublic[39m(B[m [32mboolean[39m(B[m containsKey(KeyType key) {[21d[?25l[?12l[?25h7[2;22r8[22d[7S[1;24r[15;9H[32mint[39m(B[m index=0;[16;9H[31mwhile[39m(B[m(index<buckets.length) {[17;13H[31mif[39m(B[m(buckets[index] != [33mnull[39m(B[m && buckets[index].getKey().equals(key) ) {[18;17H[31mreturn[39m(B[m [33mtrue[39m(B[m;[19;13H}[20dindex++;[21;9H}[?25l[?12l[?25h7[2;22r8[22d[2S[1;24r[20;9H[31mif[39m(B[m(key == [33mnull[39m(B[m) {[21;13H[31mreturn[39m(B[m [33mfalse[39m(B[m;[?25l[?12l[?25h[2d[2;9H    }[3d[1K index++;[4;9H}[5;5H    [31mif[39m(B[m(key == [33mnull[39m(B[m) {[6;12H[1K [31mreturn[39m(B[m [33mfalse[39m(B[m;[K[7;8H[1K }[8d[1K [31mreturn[39m(B[m [33mfalse[39m(B[m;[K[9d    }[K[10d[K[11d[K[12;5H(B[0;1m[34m/**[13;5H[1K *The get method returns the value associated with the key entered.[14;5H[1K *[39m(B[m[K[15d(B[0;1m[34m[1K * @param key key, whose value should to be returned[39m(B[m[K[16;5H(B[0;1m[34m[1K * @return the value associated with the key entered[17;5H[1K * @throws NoSuchElementException when key is not stored in this collection[18;5H[1K */[39m(B[m[K[19;5H[36mpublic[39m(B[m ValueType get(KeyType key) [36mthrows[39m(B[m NoSuchElementException {[20d[K[21;9H[31mif[39m(B[m(containsKey(key) == [33mfalse[39m(B[m) {[?25l[?12l[?25h[2;5H(B[0;1m[34m[1K * @param key key, whose value should to be returned[3;5H[1K * @return the value associated with the key entered[4;5H[1K * @throws NoSuchElementException when key is not stored in this collection[5;5H[1K */[39m(B[m[K[6;5H[36mpublic[39m(B[m ValueType get(KeyType key) [36mthrows[39m(B[m NoSuchElementException {[7d[K[8;9H[31mif[39m(B[m(containsKey(key) == [33mfalse[39m(B[m) {[9;12H[1K [31mthrow[39m(B[m [32mnew[39m(B[m NoSuchElementException([31m"ERROR! The key is not stored in t[39m(B[0;7m>[10;9H(B[m}[11d[32mint[39m(B[m index = hashFunction(key);[12;5H    [31mwhile[39m(B[m(index < buckets.length) {[13;12H[1K [31mif[39m(B[m (buckets[index] != [33mnull[39m(B[m && buckets[index].getKey().equals(key)) {[14;20H[1K [31mreturn[39m(B[m buckets[index].getValue();[15;12H[1K }[K[16d[1K index = (index + 1) % tableSize;[K[17d[K[18;12H[1K [34m//if reaches at the end of the array, then it wraps to the beginnin[39m(B[0;7m>[19;12H(B[m[1K [31mif[39m(B[m(index == buckets.length-1) {[K[20;17Hindex = 0;[21;9H    }[K[?25l[?12l[?25h7[2;22r8[22d[2S[1;24r[20;9H}[21d[31mreturn[39m(B[m [33mnull[39m(B[m;[?25l[?12l[?25h[2;12H[1K }[K[3d[1K index = (index + 1) % tableSize;[4d[K[5;13H[34m//if reaches at the end of the array, then it wraps to the beginnin[39m(B[0;7m>[6;9H(B[m    [31mif[39m(B[m(index == buckets.length-1) {[7;13H    index = 0;[K[8d[8;9H    }[9;9H}[K[10d[31mreturn[39m(B[m [33mnull[39m(B[m;[K[11;5H}[K[12d[K[13d[K[14;5H(B[0;1m[34m/**[39m(B[m[K[15;5H(B[0;1m[34m[1K * remove the mapping for a given key from this collection[16;5H[1K *[39m(B[m[K[17d(B[0;1m[34m[1K * @param key the key who key-value pair should be removed[18;5H[1K * @return the value of the removed key-value pair[19;5H[1K * @throws NoSuchElementException when key is not stored in this collection[20;5H[1K */[39m(B[m[K[21;5H[36mpublic[39m(B[m ValueType remove(KeyType key) [36mthrows[39m(B[m NoSuchElementException {[?25l[?12l[?25h7[2;22r8[22d[3S[1;24r[20;9H[31mif[39m(B[m(key == [33mnull[39m(B[m || containsKey(key) == [33mfalse[39m(B[m) {[21;13H[31mthrow[39m(B[m [32mnew[39m(B[m NoSuchElementException([31m"ERROR! The key is not stored in t[39m(B[0;7m>[21;1H(B[m[?25l[?12l[?25h[2;5H(B[0;1m[34m[1K * @return the value of the removed key-value pair[39m(B[m[K[3;5H(B[0;1m[34m[1K * @throws NoSuchElementException when key is not stored in this collection[4;5H[1K */[39m(B[m[K[5;5H[36mpublic[39m(B[m ValueType remove(KeyType key) [36mthrows[39m(B[m NoSuchElementException {[6d[K[7;9H[31mif[39m(B[m(key == [33mnull[39m(B[m || containsKey(key) == [33mfalse[39m(B[m) {[8;12H[1K [31mthrow[39m(B[m [32mnew[39m(B[m NoSuchElementException([31m"ERROR! The key is not stored in t[39m(B[0;7m>[9;9H(B[m}[10d[32mint[39m(B[m index = hashFunction(key);[11;5H    ValueType value = [33mnull[39m(B[m;[12;8H[1K [32mint[39m(B[m startIndex = index;[K[13;8H[1K [31mwhile[39m(B[m(index<buckets.length) {[14;12H[1K [31mif[39m(B[m(buckets[index] != [33mnull[39m(B[m) {[K[15;16H[1K [31mif[39m(B[m (buckets[index].getKey().equals(key)) {[16;20H[1K value = buckets[index].getValue();[K[17;20H[1K buckets[index] = sentObj;[18;20H[1K size--;[K[19;21H[31mreturn[39m(B[m value;[20;16H[1K }[K[21;13H}[K[?25l[?12l[?25h7[2;22r8[22d
[1;24r[21;13Hindex = (index + 1) % getCapacity();[?25l[?12l[?25h7[2;22r8[22d[2S[1;24r[20;13H[31mif[39m(B[m(index == startIndex) {[21;17H[31mbreak[39m(B[m;[?25l[?12l[?25h[2;20H[1K value = buckets[index].getValue();[K[3;21Hbuckets[index] = sentObj;[4;20H[1K size--;[K[5;20H[1K [31mreturn[39m(B[m value;[K[6;16H[1K }[7;9H    }[K[8;9H    index = (index + 1) % getCapacity();[9;9H    [31mif[39m(B[m(index == startIndex) {[10;16H[1K [31mbreak[39m(B[m;[K[11;13H}[K[12d[K[13;13H[34m//if reaches at the end of the array, then it wraps to the beginnin[39m(B[0;7m>[14;13H(B[0m[31mif[39m(B[m(index == buckets.length-1) {[K[15;17Hindex = 0;[K[16;13H}[K[17;9H}[K[18d[31mreturn[39m(B[m value;[19;5H}[K[20d[K[21;5H(B[0;1m[34m/**[39m(B[m[K[?25l[?12l[?25h7[2;22r8[22d[2S[1;24r[20;5H(B[0;1m[34m[1K * remove all key-value pairs from this collection[21;5H[1K */[39m(B[m[?25l[?12l[?25h7[2;22r8[22d[6S[1;24r[16;5H[36mpublic[39m(B[m [32mvoid[39m(B[m clear() {[18;9H[31mfor[39m(B[m ([32mint[39m(B[m i = 0; i < buckets.length; i++) {[19;13Hbuckets[i] = [33mnull[39m(B[m;[20;9H}[21dsize = 0;[?25l[?12l[?25h7[2;22r8[22d[5S[1;24r[17;5H}[20d(B[0;1m[34m/**[21;5H[1K * retrieve the number of keys stored within this collection[39m(B[m[?25l[?12l[?25h[2;13Hbuckets[i] = [33mnull[39m(B[m;[3;9H}[K[4dsize = 0;[5;5H}[K[6d[K[9;10H(B[0;1m[34mtrieve the number of keys stored within this collection[10;7H @return the number of key-value pairs present[11;5H[1K */[39m(B[m[K[12;5H[36mpublic[39m(B[m [32mint[39m(B[m getSize() {[13;9H[31mreturn[39m(B[m size;[K[14;5H}[K[15d[K[16d[K[17;5H(B[0;1m[34m/**[18;5H[1K * retrieve this collection's capacity (size of its underlying array)[19;5H[1K *[20d[1K * @return the size of the hashtable[21;7H/[39m(B[m[K[?25l[?12l[?25h7[2;22r8[22d
[1;24r[21;5H[36mpublic[39m(B[m [32mint[39m(B[m getCapacity() {[?25l[?12l[?25h7[2;22r8[22d[4S[1;24r[18;9H[31mreturn[39m(B[m tableSize;[19;5H}[20d}[21d[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[22d(B[0;7mSave modified buffer?                                                           [23;1H Y(B[m Yes[K[24d(B[0;7m N(B[m No  [14G   (B[0;7m^C(B[m Cancel[K[22;23H[?12l[?25h[?25l[23d(B[0;7m^G(B[m Help[23;21H(B[0;7mM-D(B[m DOS Format[41G(B[0;7mM-A(B[m Append[23;61H(B[0;7mM-B(B[m Backup File[24d(B[0;7m^C(B[m Cancel[17G    (B[0;7mM-M(B[m Mac Format[41G(B[0;7mM-P(B[m Prepend[24;61H(B[0;7m^T(B[m Browse[22d(B[0;7mFile Name to Write: HashtableMap.java(B[m[?12l[?25h[?25l[33G[1K (B[0;7m[ Writing... ](B[m[K[1;53H(B[0;7m [79G(B[m[22;31H(B[0;7m[ Wrote 229 lines ](B[m[J[24d[?12l[?25h[24;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h[ark@vm-instunix-03] (11)$ git status
[?2004lOn branch BackendDeveloper
Your branch is up to date with 'origin/BackendDeveloper'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   log[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   HashtableMap.java[m
	[31mmodified:   log[m

[?2004h[ark@vm-instunix-03] (12)$ git add HashtablleM[K[K[KeMap.java
[?2004l[?2004h[ark@vm-instunix-03] (13)$ git commint[K[Kt -m ""u"p"l"o"a"d"i"n"g" "H"a"s"h"t"a"b"l"e"M"a"p"."j"a"v"a"[C
[?2004l[BackendDeveloper 5ede281] uploading HashtableMap.java
 2 files changed, 244 deletions(-)
 rewrite log (100%)
[?2004h[ark@vm-instunix-03] (14)$ git status
[?2004lOn branch BackendDeveloper
Your branch is ahead of 'origin/BackendDeveloper' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   log[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004h[ark@vm-instunix-03] (15)$ git add log[K[K[K[K[K[K[Kcommit [K[K[K[K[K[K[Kadd log
[?2004l[?2004h[ark@vm-instunix-03] (16)$ git commit -m ""r"e"u"p"l"o"a"d"i"n"g" "l"o"g"
[?2004l[BackendDeveloper e168f6e] reuploading log
 1 file changed, 243 insertions(+)
[?2004h[ark@vm-instunix-03] (17)$ gi [Kt status
[?2004lOn branch BackendDeveloper
Your branch is ahead of 'origin/BackendDeveloper' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
[?2004h[ark@vm-instunix-03] (18)$ [7mgit log -1[27mgit log -1
[?2004l[?1h=[33mcommit e168f6e7a23995d59801a1fef186392582e70162[m[33m ([m[1;36mHEAD -> [m[1;32mBackendDeveloper[m[33m)[m[m
Author: Ark Dutt <dutt3@wisc.edu>[m
Date:   Thu Feb 16 18:21:43 2023 -0600[m
[m
    reuploading log[m
[K[?1l>[?2004h[ark@vm-instunix-03] (19)$ [7mrm -f *.class[27mrm -f *.class
[?2004l[?2004h[ark@vm-instunix-03] (20)$ ls
[?2004lCHSearchBackendBD.java                    log
CHSearchBackendInterface.java             MapADT.java
CHSearchBackendTest.java                  PostBD.java
HashNode.java                             PostInterface.java
HashtableMap.java                         PostReaderBD.java
HashtableWithDuplicateKeysBD.java         PostReaderInterface.java
HashtableWithDuplicateKeysInterface.java  role.txt
[?2004h[ark@vm-instunix-03] (21)$ [7mjavac *.java[27mjavac *.java
[?2004lNote: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
[?2004h[ark@vm-instunix-03] (22)$ javac[K[K[K[K[K[7mjavac *.java[27mjavac *.java [7m-Xlint[27m-Xlint
[?2004lHashtableMap.java:25: warning: [rawtypes] found raw type: HashNode
    HashNode<KeyType, ValueType> obj = new HashNode(-50000000, -50000000);
                                           ^
  missing type arguments for generic class HashNode<KeyType,ValueType>
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashNode
    ValueType extends Object declared in class HashNode
HashtableMap.java:25: warning: [unchecked] unchecked call to HashNode(KeyType,ValueType) as a member of the raw type HashNode
    HashNode<KeyType, ValueType> obj = new HashNode(-50000000, -50000000);
                                       ^
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashNode
    ValueType extends Object declared in class HashNode
HashtableMap.java:25: warning: [unchecked] unchecked conversion
    HashNode<KeyType, ValueType> obj = new HashNode(-50000000, -50000000);
                                       ^
  required: HashNode<KeyType,ValueType>
  found:    HashNode
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashtableMap
    ValueType extends Object declared in class HashtableMap
HashtableMap.java:31: warning: [rawtypes] found raw type: HashNode
        this.buckets = new HashNode[capacity];
                           ^
  missing type arguments for generic class HashNode<KeyType,ValueType>
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashNode
    ValueType extends Object declared in class HashNode
HashtableMap.java:101: warning: [rawtypes] found raw type: HashNode
        buckets = new HashNode[tableSize];
                      ^
  missing type arguments for generic class HashNode<KeyType,ValueType>
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashNode
    ValueType extends Object declared in class HashNode
HashtableMap.java:101: warning: [unchecked] unchecked conversion
        buckets = new HashNode[tableSize];
                  ^
  required: HashNode<KeyType,ValueType>[]
  found:    HashNode[]
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashtableMap
    ValueType extends Object declared in class HashtableMap
HashtableWithDuplicateKeysBD.java:29: warning: [unchecked] unchecked cast
        list.add((ValueType) post1);
                             ^
  required: ValueType
  found:    PostBD
  where ValueType is a type-variable:
    ValueType extends Object declared in class HashtableWithDuplicateKeysBD
HashtableWithDuplicateKeysBD.java:30: warning: [unchecked] unchecked cast
        list.add((ValueType) post2);
                             ^
  required: ValueType
  found:    PostBD
  where ValueType is a type-variable:
    ValueType extends Object declared in class HashtableWithDuplicateKeysBD
8 warnings
[?2004h[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ ;7mM-M(B[m Mac Format[41G(B[0;7mM-P(B[m Prepend[24;61H(B[0;7m^T(B[m Browse[22d(B[0;7mFile Name to Write: HashtableMap.java(B[m[?12l[?25h[?25l[33G[1K (B[0;7m[ Writing... ](B[m[K[1;53H(B[0;7m [79G(B[m[22;31H(B[0;7m[ Wrote 229 lines ](B[m[J[24d[?12l[?25h[24;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h[ark@vm-instunix-03] (11)$ git status
[?2004lOn branch BackendDeveloper
Your branch is up to date with 'origin/BackendDeveloper'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   log[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   HashtableMap.java[m
	[31mmodified:   log[m

[?2004h[ark@vm-instunix-03] (12)$ git add HashtablleM[K[K[KeMap.java
[?2004l[?2004h[ark@vm-instunix-03] (13)$ git commint[K[Kt -m ""u"p"l"o"a"d"i"n"g" "H"a"s"h"t"a"b"l"e"M"a"p"."j"a"v"a"[C
[?2004l[BackendDeveloper 5ede281] uploading HashtableMap.java
 2 files changed, 244 deletions(-)
 rewrite log (100%)
[?2004h[ark@vm-instunix-03] (14)$ git status
[?2004lOn branch BackendDeveloper
Your branch is ahead of 'origin/BackendDeveloper' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   log[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004h[ark@vm-instunix-03] (15)$ git add log[K[K[K[K[K[K[Kcommit [K[K[K[K[K[K[Kadd log
[?2004l[?2004h[ark@vm-instunix-03] (16)$ git commit -m ""r"e"u"p"l"o"a"d"i"n"g" "l"o"g"
[?2004l[BackendDeveloper e168f6e] reuploading log
 1 file changed, 243 insertions(+)
[?2004h[ark@vm-instunix-03] (17)$ gi [Kt status
[?2004lOn branch BackendDeveloper
Your branch is ahead of 'origin/BackendDeveloper' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
[?2004h[ark@vm-instunix-03] (18)$ [7mgit log -1[27mgit log -1
[?2004l[?1h=[33mcommit e168f6e7a23995d59801a1fef186392582e70162[m[33m ([m[1;36mHEAD -> [m[1;32mBackendDeveloper[m[33m)[m[m
Author: Ark Dutt <dutt3@wisc.edu>[m
Date:   Thu Feb 16 18:21:43 2023 -0600[m
[m
    reuploading log[m
[K[?1l>[?2004h[ark@vm-instunix-03] (19)$ [7mrm -f *.class[27mrm -f *.class
[?2004l[?2004h[ark@vm-instunix-03] (20)$ ls
[?2004lCHSearchBackendBD.java                    log
CHSearchBackendInterface.java             MapADT.java
CHSearchBackendTest.java                  PostBD.java
HashNode.java                             PostInterface.java
HashtableMap.java                         PostReaderBD.java
HashtableWithDuplicateKeysBD.java         PostReaderInterface.java
HashtableWithDuplicateKeysInterface.java  role.txt
[?2004h[ark@vm-instunix-03] (21)$ [7mjavac *.java[27mjavac *.java
[?2004lNote: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
[?2004h[ark@vm-instunix-03] (22)$ javac[K[K[K[K[K[7mjavac *.java[27mjavac *.java [7m-Xlint[27m-Xlint
[?2004lHashtableMap.java:25: warning: [rawtypes] found raw type: HashNode
    HashNode<KeyType, ValueType> obj = new HashNode(-50000000, -50000000);
                                           ^
  missing type arguments for generic class HashNode<KeyType,ValueType>
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashNode
    ValueType extends Object declared in class HashNode
HashtableMap.java:25: warning: [unchecked] unchecked call to HashNode(KeyType,ValueType) as a member of the raw type HashNode
    HashNode<KeyType, ValueType> obj = new HashNode(-50000000, -50000000);
                                       ^
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  jects:  77% (14/18)Compressing objects:  83% (15/18)Compressing objects:  88% (16/18)Compressing objects:  94% (17/18)Compressing objects: 100% (18/18)Compressing objects: 100% (18/18), done.
Writing objects:   5% (1/18)Writing objects:  11% (2/18)Writing objects:  16% (3/18)Writing objects:  22% (4/18)Writing objects:  27% (5/18)Writing objects:  33% (6/18)Writing objects:  38% (7/18)Writing objects:  44% (8/18)Writing objects:  50% (9/18)Writing objects:  55% (10/18)Writing objects:  61% (11/18)Writing objects:  66% (12/18)Writing objects:  77% (14/18)Writing objects:  83% (15/18)Writing objects:  88% (16/18)Writing objects:  94% (17/18)Writing objects: 100% (18/18)Writing objects: 100% (18/18), 17.20 KiB | 2.87 MiB/s, done.
Total 18 (delta 5), reused 0 (delta 0), pack-reused 0
To ssh://best-linux.cs.wisc.edu:/p/course/cs400/activities/repos/Project1_ark
   d9cfafd..dcda662  BackendDeveloper -> BackendDeveloper
[?2004h[ark@vm-instunix-03] (7)$ git status 
[?2004lOn branch BackendDeveloper
Your branch is up to date with 'origin/BackendDeveloper'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   log[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   log[m

[?2004h[ark@vm-instunix-03] (8)$ [7mgit log -1[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit log -1
[A
[?2004l[?1h=[33mcommit dcda6629caffd7ffccb36f39643da598fa61bdb4[m[33m ([m[1;36mHEAD -> [m[1;32mBackendDeveloper[m[33m, [m[1;31morigi[m [33m[m[33m[m[1;36m[m[1;32m[m[33m[m[1;31mn/BackendDeveloper[m[33m)[m[m
Author: Ark Dutt <dutt3@wisc.edu>[m
Date:   Thu Feb 16 18:04:54 2023 -0600[m
[m
    uploading log[m
[K[?1l>[?2004h[ark@vm-instunix-03] (9)$ [7mrm -f *.class[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Crm -f *.class
[A
[?2004l[?2004h[ark@vm-instunix-03] (10)$ ls
[?2004lCHSearchBackendBD.java                    log
CHSearchBackendInterface.java             MapADT.java
CHSearchBackendTest.java                  PostBD.java
HashNode.java                             PostInterface.java
HashtableMap.java                         PostReaderBD.java
HashtableWithDuplicateKeysBD.java         PostReaderInterface.java
HashtableWithDuplicateKeysInterface.java  role.txt
[?2004h[ark@vm-instunix-03] (11)$ 
[?2004l[?2004h[ark@vm-instunix-03] (11)$ [7mjavac *.java[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cjavac *.java
[A
[?2004lNote: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
[?2004h[ark@vm-instunix-03] (12)$ rm HashtableMpa[K[Kap.java
[?2004lrm: remove regular file 'HashtableMap.java'? yes
[?2004h[ark@vm-instunix-03] (13)$ ls
[?2004lCHSearchBackendBD.class                    log
CHSearchBackendBD.java                     MapADT.class
CHSearchBackendInterface.class             MapADT.java
CHSearchBackendInterface.java              PostBD.class
CHSearchBackendTest.class                  PostBD.java
CHSearchBackendTest.java                   PostInterface.class
HashNode.class                             PostInterface.java
HashNode.java                              PostReaderBD.class
HashtableMap.class                         PostReaderBD.java
HashtableWithDuplicateKeysBD.class         PostReaderInterface.class
HashtableWithDuplicateKeysBD.java          PostReaderInterface.java
HashtableWithDuplicateKeysInterface.class  role.txt
HashtableWithDuplicateKeysInterface.java
[?2004h[ark@vm-instunix-03] (14)$ [7mscript log[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cscript log
[A
[?2004lScript started, output log file is 'log'.
[?2004h[ark@vm-instunix-03] (1)$ [7mgit status[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit status
[A
[?2004lOn branch BackendDeveloper
Your branch is up to date with 'origin/BackendDeveloper'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   log[m

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mdeleted:    HashtableMap.java[m
	[31mmodified:   log[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mCHSearchBackendBD.class[m
	[31mCHSearchBackendInterface.class[m
	[31mCHSearchBackendTest.class[m
	[31mHashNode.class[m
	[31mHashtableMap.class[m
	[31mHashtableWithDuplicateKeysBD.class[m
	[31mHashtableWithDuplicateKeysInterface.class[m
	[31mMapADT.class[m
	[31mPostBD.class[m
	[31mPostInterface.class[m
	[31mPostReaderBD.class[m
	[31mPostReaderInterface.class[m

[?2004h[ark@vm-instunix-03] (2)$ git add CHSearchBackendBD.k[Kjava
[?2004l[?2004h[ark@vm-instunix-03] (3)$ gt[Kit add CHSE[KearchBackendInterface.java
[?2004l[?2004h[ark@vm-instunix-03] (4)$ git add CHSeat[KrchBackendTest.cl[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kls 
[?2004lCHSearchBackendBD.class                    log
CHSearchBackendBD.java                     MapADT.class
CHSearchBackendInterface.class             MapADT.java
CHSearchBackendInterface.java              PostBD.class
CHSearchBackendTest.class                  PostBD.java
CHSearchBackendTest.java                   PostInterface.class
HashNode.class                             PostInterface.java
HashNode.java                              PostReaderBD.class
HashtableMap.class                         PostReaderBD.java
HashtableWithDuplicateKeysBD.class         PostReaderInterface.class
HashtableWithDuplicateKeysBD.java          PostReaderInterface.java
HashtableWithDuplicateKeysInterface.class  role.txt
HashtableWithDuplicateKeysInterface.java
[?2004h[ark@vm-instunix-03] (5)$ [7mgit log -1[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit log -1
[A
[?2004l[?1h=[33mcommit dcda6629caffd7ffccb36f39643da598fa61bdb4[m[33m ([m[1;36mHEAD -> [m[1;32mBackendDeveloper[m[33m, [m[1;31morigi[m [33m[m[33m[m[1;36m[m[1;32m[m[33m[m[1;31mn/BackendDeveloper[m[33m)[m[m
Author: Ark Dutt <dutt3@wisc.edu>[m
Date:   Thu Feb 16 18:04:54 2023 -0600[m
[m
    uploading log[m
[K[?1l>[?2004h[ark@vm-instunix-03] (6)$ [7mrm -f *.class[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Crm -f *.class
[A
[?2004l[?2004h[ark@vm-instunix-03] (7)$ [7mls[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls
[A
[?2004lCHSearchBackendBD.java                    MapADT.java
CHSearchBackendInterface.java             PostBD.java
CHSearchBackendTest.java                  PostInterface.java
HashNode.java                             PostReaderBD.java
HashtableWithDuplicateKeysBD.java         PostReaderInterface.java
HashtableWithDuplicateKeysInterface.java  role.txt
log
[?2004h[ark@vm-instunix-03] (8)$ [7mjavac *.java[27m
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cjavac *.java
[A
[?2004lHashtableWithDuplicateKeysBD.java:12: error: cannot find symbol
public class HashtableWithDuplicateKeysBD<KeyType, ValueType> extends HashtableMap<KeyType, List<ValueType>> implements HashtableWithDuplicateKeysInterface<KeyType, ValueType> {
                                                                      ^
  symbol: class HashtableMap
HashtableWithDuplicateKeysBD.java:12: error: HashtableWithDuplicateKeysBD is not abstract and does not override abstract method getCapacity() in MapADT
public class HashtableWithDuplicateKeysBD<KeyType, ValueType> extends HashtableMap<KeyType, List<ValueType>> implements HashtableWithDuplicateKeysInterface<KeyType, ValueType> {
       ^
Note: HashtableWithDuplicateKeysBD.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
2 errors
[?2004h[ark@vm-instunix-03] (9)$ g[Ktouch Hsa[K[KashtableMap.java
[?2004l[?2004h[ark@vm-instunix-03] (10)$ mnan[K[K[K[Knano HashtableMap.java
[?2004l[?2004h[?1049h[22;0;0t[1;24r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[22;34H(B[0;7m[ Reading... ](B[m[22;33H(B[0;7m[ Read 0 lines ](B[m[H(B[0;7m  GNU nano 6.2                    HashtableMap.java                             [1;79H(B[m[23d(B[0;7m^G(B[m Help[14G(B[0;7m^O(B[m Write Out (B[0;7m^W(B[m Where Is  (B[0;7m^K(B[m Cut[53G(B[0;7m^T(B[m Execute   (B[0;7m^C(B[m Location[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^R(B[m Read File (B[0;7m^\(B[m Replace   (B[0;7m^U(B[m Paste     (B[0;7m^J(B[m Justify   (B[0;7m^/(B[m Go To Line[2d[?12l[?25h[?25l[22d[K[1;53H(B[0;7m*[79G(B[m[3;5H(B[0;1m[34m/**[4;5H[1K * retrieve this collection's capacity (size of its underlying array)[5;5H[1K *[6d[1K * @return the size of the hashtable[7;5H[1K */[8;5H(B[0m[36mpublic[39m(B[m [32mint[39m(B[m getCapacity() {[9;9H[31mreturn[39m(B[m tableSize;[10;5H}[11d}[12d[?12l[?25h[?25l[?12l[?25h[A[?25l[?12l[?25h[A[?25l[?12l[?25h[A[?25l[?12l[?25h[A[?25l[?12l[?25h[A[?25l[?12l[?25h[5d[?25l[?12l[?25h[2;9H}[3;5H    size = 0;[4d    }[K[5d[K[6d[K[7d    (B[0;1m[34m/**[8;5H[1K * retrieve the number of keys stored within this collection[9;5H[1K * @return the number of key-value pairs present[10;5H[1K */[11d[39m(B[m    [36mpublic[39m(B[m [32mint[39m(B[m getSize() {[12;9H[31mreturn[39m(B[m size;[13;5H}[16d(B[0;1m[34m/**[17;5H[1K * retrieve this collection's capacity (size of its underlying array)[18;5H[1K *[19d[1K * @return the size of the hashtable[20;5H[1K */[21;5H(B[0m[36mpublic[39m(B[m [32mint[39m(B[m getCapacity() {[2d[?25l[?12l[?25h7[2;21r8[3T[1;24r[3;9H[31mfor[39m(B[m ([32mint[39m(B[m i = 0; i < buckets.length; i++) {[4;13Hbuckets[i] = [33mnull[39m(B[m;[2d[?25l[?12l[?25h7[2;22r8[4T[1;24r[2;5H(B[0;1m[34m/**[3;5H[1K * remove all key-value pairs from this collection[4;5H[1K */[5;5H(B[0m[36mpublic[39m(B[m [32mvoid[39m(B[m clear() {[2d[?25l[?12l[?25h7[2;21r8[3T[1;24r[2;9H[31mreturn[39m(B[m value;[3;5H}[A[?25l[?12l[?25h7[2;21r8[2T[1;24r[2;13H}[3;9H}[A[?25l[?12l[?25h7[2;22r8[5T[1;24r[2;13H}[4d[34m//if reaches at the end of the array, then it wraps to the beginnin[39m(B[0;7m>[5;13H(B[0m[31mif[39m(B[m(index == buckets.length-1) {[6;17Hindex = 0;[2d[?25l[?12l[?25h7[2;21r8M[1;24r[2;17H[31mbreak[39m(B[m;[?25l[?12l[?25h7[2;21r8[4T[1;24r[2;17H}[3;13H}[4dindex = (index + 1) % getCapacity();[5;13H[31mif[39m(B[m(index == startIndex) {[2d[?25l[?12l[?25h7[2;21r8[3T[1;24r[2;21Hbuckets[index] = sentObj;[3;21Hsize--;[4;21H[31mreturn[39m(B[m value;[2d[?25l[?12l[?25h7[2;21r8[2T[1;24r[2;17H[31mif[39m(B[m (buckets[index].getKey().equals(key)) {[3;21Hvalue = buckets[index].getValue();[A[?25l[?12l[?25h7[2;21r8[4T[1;24r[2;9HValueType value = [33mnull[39m(B[m;[3;9H[32mint[39m(B[m startIndex = index;[4;9H[31mwhile[39m(B[m(index<buckets.length) {[5;13H[31mif[39m(B[m(buckets[index] != [33mnull[39m(B[m) {[2d[?25l[?12l[?25h7[2;22r8[5T[1;24r[3;9H[31mif[39m(B[m(key == [33mnull[39m(B[m || containsKey(key) == [33mfalse[39m(B[m) {[4;13H[31mthrow[39m(B[m [32mnew[39m(B[m NoSuchElementException([31m"ERROR! The key is not stored in t[39m(B[0;7m>[5;9H(B[m}[6d[32mint[39m(B[m index = hashFunction(key);[2d[?25l[?12l[?25h7[2;21r8[2T[1;24r[2;5H(B[0;1m[34m[1K */[3;5H(B[0m[36mpublic[39m(B[m ValueType remove(KeyType key) [36mthrows[39m(B[m NoSuchElementException {[A[?25l[?12l[?25h7[2;21r8[3T[1;24r[2;5H(B[0;1m[34m[1K * @param key the key who key-value pair should be removed[3;5H[1K * @return the value of the removed key-value pair[4;5H[1K * @throws NoSuchElementException when key is not stored in this collection[2d[39m(B[m[?25l[?12l[?25h7[2;21r8[4T[1;24r[3;5H(B[0;1m[34m/**[4;5H[1K * remove the mapping for a given key from this collection[5;5H[1K *[2d[39m(B[m[?25l[?12l[?25h7[2;21r8[4T[1;24r[2;9H}[3d[31mreturn[39m(B[m [33mnull[39m(B[m;[4;5H}[2d[?25l[?12l[?25h7[2;21r8[4T[1;24r[2;13H[34m//if reaches at the end of the array, then it wraps to the beginnin[39m(B[0;7m>[3;13H(B[0m[31mif[39m(B[m(index == buckets.length-1) {[4;17Hindex = 0;[5;13H}[2d[?25l[?12l[?25h7[2;21r8[2T[1;24r[2;13Hindex = (index + 1) % tableSize;[?25l[?12l[?25h7[2;21r8[2T[1;24r[2;21H[31mreturn[39m(B[m buckets[index].getValue();[3;13H}[A[?25l[?12l[?25h7[2;21r8[3T[1;24r[2;9H[32mint[39m(B[m index = hashFunction(key);[3;9H[31mwhile[39m(B[m(index < buckets.length) {[4;13H[31mif[39m(B[m (buckets[index] != [33mnull[39m(B[m && buckets[index].getKey().equals(key)) {[2;1H[?25l[?12l[?25h7[2;21r8M[1;24r[2;9H}[?25l[?12l[?25h7[2;22r8[10T[1;24r[2;5H(B[0;1m[34m[1K *The get method returns the value associated with the key entered.[3;5H[1K *[4d[1K * @param key key, whose value should to be returned[5;5H[1K * @return the value associated with the key entered[6;5H[1K * @throws NoSuchElementException when key is not stored in this collection[7;5H[1K */[8;5H(B[0m[36mpublic[39m(B[m ValueType get(KeyType key) [36mthrows[39m(B[m NoSuchElementException {[10;9H[31mif[39m(B[m(containsKey(key) == [33mfalse[39m(B[m) {[11;13H[31mthrow[39m(B[m [32mnew[39m(B[m NoSuchElementException([31m"ERROR! The key is not stored in t[39m(B[0;7m>[22;1H(B[m[K[2d[?25l[?12l[?25h7[2;21r8M[1;24r[2;5H(B[0;1m[34m/**[39m(B[m[?25l[?12l[?25h7[2;21r8[6T[1;24r[2;13H[31mreturn[39m(B[m [33mfalse[39m(B[m;[3;9H}[4d[31mreturn[39m(B[m [33mfalse[39m(B[m;[5;5H}[2d[?25l[?12l[?25h7[2;22r8[6T[1;24r[2;13H[31mif[39m(B[m(buckets[index] != [33mnull[39m(B[m && buckets[index].getKey().equals(key) ) {[3;17H[31mreturn[39m(B[m [33mtrue[39m(B[m;[4;13H}[5dindex++;[6;9H}[7d[31mif[39m(B[m(key == [33mnull[39m(B[m) {[2d[?25l[?12l[?25h7[2;21r8[3T[1;24r[3;9H[32mint[39m(B[m index=0;[4;9H[31mwhile[39m(B[m(index<buckets.length) {[2d[?25l[?12l[?25h7[2;22r8[10T[1;24r[2;9H}[3;5H}[5d(B[0;1m[34m/**[6;5H[1K * The containsKey method checks whether a key maps to a value within this [39m(B[0;7m>[7;5H(B[0;1m[34m[1K *[8d[1K * @param key the key, which needs to be checked[9;5H[1K * @return true if the key maps to a value within the collection, otherwise[39m(B[0;7m>[10;5H(B[0;1m[34m[1K */[11;5H(B[0m[36mpublic[39m(B[m [32mboolean[39m(B[m containsKey(KeyType key) {[22d[K[2d[?25l[?12l[?25h7[2;22r8[10T[1;24r[2;9HHashNode<KeyType, ValueType>[] oldBuckets = buckets;[3;9Hbuckets = [32mnew[39m(B[m HashNode[tableSize];[4;9Hsize = 0;[5;9H[31mfor[39m(B[m([32mint[39m(B[m i=0; i<oldBuckets.length; i++) {[6;13H[31mif[39m(B[m(oldBuckets[i] == [33mnull[39m(B[m) {[7;17H[31mcontinue[39m(B[m;[8;13H}[9dKeyType newKey = oldBuckets[i].getKey();[10;13HValueType newVal = oldBuckets[i].getValue();[11;13Hput(newKey, newVal);[2d[?25l[?12l[?25h7[2;21r8[4T[1;24r[2;5H(B[0;1m[34m[1K */[3;5H(B[0m[36mpublic[39m(B[m [32mvoid[39m(B[m rehash() {[5;9HtableSize = 2*tableSize;[2d[?25l[?12l[?25h[8G[1K size++;[3d[K[4;9H[31mif[39m(B[m(Double.valueOf(size) / Double.valueOf(tableSize) >= loadFactor) {[5;9H    rehash();[K[6;9H}[K[7;5H}[K[8d[K[9;5H(B[0;1m[34m/**[39m(B[m[K[10;5H(B[0;1m[34m[1K * The rehash method resizes the array when the load factor exceeds 0.7.[11;5H[1K * In this method, the array size is doubled and the key-value pairs are re[39m(B[0;7m>[12;5H(B[0;1m[34m[1K * size of the array. The method calls the put method in order to redistrib[39m(B[0;7m>[13;5H(B[0;1m[34m[1K * resized array[39m(B[m[K[14;5H(B[0;1m[34m[1K */[39m(B[m[K[15;5H[36mpublic[39m(B[m [32mvoid[39m(B[m rehash() {[K[16d[K[17;5H    tableSize = 2*tableSize;[18;9HHashNode<KeyType, ValueType>[] oldBuckets = buckets;[19;5H    buckets = [32mnew[39m(B[m HashNode[tableSize];[20;8H[1K size = 0;[K[21;8H[1K [31mfor[39m(B[m([32mint[39m(B[m i=0; i<oldBuckets.length; i++) {[2d[?25l[?12l[?25h7[2;21r8[2T[1;24r[3;9Hbuckets[index] = sentObj;[A[?25l[?12l[?25h7[2;21r8[2T[1;24r[2;17Hindex++;[3;9H}[A[?25l[?12l[?25h[2;9H}[K[3d[K[4;9H[31mif[39m(B[m(containsKey(key) == [33mtrue[39m(B[m) {[5;9H    [31mthrow[39m(B[m [32mnew[39m(B[m IllegalArgumentException([31m"The keys are duplicate of one a[39m(B[0;7m>[6;9H(B[m}[K[8dHashNode <KeyType,ValueType> sentObj = [32mnew[39m(B[m HashNode<>(key, value);[K[9;9H[32mint[39m(B[m index = hashFunction(key);[10;9H[31mwhile[39m(B[m(buckets[index] != [33mnull[39m(B[m) {[11;12H[1K [31mif[39m(B[m(index< buckets.length) {[13;16H[1K [34m//if reaches at the end of the array, then it wraps to the begi[39m(B[0;7m>[14;16H(B[m[1K [31mif[39m(B[m(index == buckets.length-1) {[K[15;20H[1K index = 0;[K[16;16H[1K }[K[17;12H[1K }[K[18d  [1K index++;[19;5H    }[K[21dbuckets[index] = sentObj;[2d[?25l[?12l[?25h7[2;21r8[3T[1;24r[3;9H[31mif[39m(B[m(key == [33mnull[39m(B[m || value == [33mnull[39m(B[m) {[4;13H[31mthrow[39m(B[m [32mnew[39m(B[m IllegalArgumentException([31m"key or value is [33mnull[31m!"[39m(B[m);[2d[?25l[?12l[?25h7[2;21r8[6T[1;24r[2;5H(B[0;1m[34m[1K * @param key the key to be added[3;5H[1K * @param value the value to be added[4;5H[1K * @throws IllegalArgumentException when the key or value is null, or if th[39m(B[0;7m>[5;5H(B[0;1m[34m[1K * duplicate of one already stored[6;5H[1K */[7;5H(B[0m[36mpublic[39m(B[m [32mvoid[39m(B[m put(KeyType key, ValueType value) [36mthrows[39m(B[m IllegalArgumentExcepti(B[0;7m>[2;1H(B[m[?25l[?12l[?25h[2;27H(B[0;1m[34mwhose index you want to find[3;9Hreturn the index[39m(B[m[K[4;7H(B[0;1m[34m/[39m(B[m[K[5d    [36mprivate[39m(B[m [32mint[39m(B[m hashFunction(KeyType key) {[6;8H[1K [31mreturn[39m(B[m Math.abs(key.hashCode()%tableSize);[7;5H}[K[9d(B[0;1m[34m/**[39m(B[m[K[10;5H(B[0;1m[34m[1K *The put method adds a new key-value pair/mapping to this collection. It t[39m(B[0;7m>[11;5H(B[0;1m[34m[1K * if the key or value are null, or if the keys are duplicate of one alread[39m(B[0;7m>[12;5H(B[0;1m[34m[1K * If the load factor exceeds by 0.7, then it rehashes.[13;5H[1K *[39m(B[m[K[14d(B[0;1m[34m[1K * @param key the key to be added[39m(B[m[K[15;5H(B[0;1m[34m[1K * @param value the value to be added[16;5H[1K * @throws IllegalArgumentException when the key or value is null, or if th[39m(B[0;7m>[17;5H(B[0;1m[34m[1K * duplicate of one already stored[39m(B[m[K[18;5H(B[0;1m[34m[1K */[39m(B[m[K[19;5H[36mpublic[39m(B[m [32mvoid[39m(B[m put(KeyType key, ValueType value) [36mthrows[39m(B[m IllegalArgumentExcepti(B[0;7m>[20;1H(B[m[K[21;9H[31mif[39m(B[m(key == [33mnull[39m(B[m || value == [33mnull[39m(B[m) {[2d[?25l[?12l[?25h7[2;21r8[7T[1;24r[2;9H[34m// with default capacity = 8[3;9H[32mthis[39m(B[m(8);[4;5H}[6d(B[0;1m[34m/**[7;5H[1K * hashFunction method calculates the intended index of the given key.[8;5H[1K *[2d[39m(B[m[?25l[?12l[?25h7[2;21r8[10T[1;24r[2;5HHashNode <KeyType,ValueType> sentObj = [32mnew[39m(B[m HashNode<KeyType, ValueType>(obj(B[0;7m>[4;5H(B[m@SuppressWarnings([31m"unchecked"[39m(B[m)[5;5H[36mpublic[39m(B[m HashtableMap([32mint[39m(B[m capacity) {[6;9H[32mthis[39m(B[m.tableSize = capacity;[7;9H[32mthis[39m(B[m.buckets = [32mnew[39m(B[m HashNode[capacity];[8;9H[32mthis[39m(B[m.size = 0;[9;5H}[11d[36mpublic[39m(B[m HashtableMap() {[2d[?25l[?12l[?25h(B[0;1m[34m * remove(key), clear(), getSize(), getCapacity() methods by implementing MapADT[3;1H *[4d * @author Ark Dutt[39m(B[m[K[5d(B[0;1m[34m */[39m(B[m[K[6d[K[7d[36mimport[39m(B[m java.util.NoSuchElementException;[K[8d[K[9d[36mpublic[39m(B[m [36mclass[39m(B[m HashtableMap<KeyType, ValueType> [36mimplements[39m(B[m MapADT<KeyType, ValueT(B[0;7m>[11;6H(B[0m[36mrotected[39m(B[m HashNode<KeyType, ValueType>[] buckets; [34m//array of integers[12;5H[36mprivate[39m(B[m [32mint[39m(B[m tableSize; [34m//capacity[13d[39m(B[m[K[14;5H[36mprivate[39m(B[m [32mdouble[39m(B[m loadFactor = 0.7;[16;5H[36mprivate[39m(B[m [32mint[39m(B[m size; [34m//current number of key-value pairs in a hashtable[17d[39m(B[m    HashNode<KeyType, ValueType> obj = [32mnew[39m(B[m HashNode(-50000000, -50000000);[18d    HashNode <KeyType,ValueType> sentObj = [32mnew[39m(B[m HashNode<KeyType, ValueType>(obj(B[0;7m>[19;1H(B[m[K[20d    @SuppressWarnings([31m"unchecked"[39m(B[m)[21d    [36mpublic[39m(B[m HashtableMap([32mint[39m(B[m capacity) {[2d[?25l[?12l[?25h7[2;22r8[3T[1;24r[3;1H(B[0;1m[34m/**[4d * The HashtableMap class uses hashFunction(key), put(key,value), rehash(), con[39m(B[0;7m>[2;1H(B[m[?25l[?12l[?25h7[2;22r8[6T[1;24r[2;1H[34m// --== CS400 Project One File Header ==--[3d// Name: Ark Dutt[4d// CSL Username: ark[5d// Email: dutt3@wisc.edu[6d// Lecture #: 004 15:30-16:20[7d// Notes to Grader: <any optional extra notes to your grader>[2d[39m(B[m[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[3d[?25l[?12l[?25h[5d[?25l[?12l[?25h[8d[?25l[?12l[?25h[9d[?25l[?12l[?25h[12d[?25l[?12l[?25h[14d[?25l[?12l[?25h[18d[?25l[?12l[?25h[2;22r[22;1H[5S[1;24r[18;5H[36mprivate[39m(B[m [32mdouble[39m(B[m loadFactor = 0.7;[20;5H[36mprivate[39m(B[m [32mint[39m(B[m size; [34m//current number of key-value pairs in a hashtable[21;5H[39m(B[mHashNode<KeyType, ValueType> obj = [32mnew[39m(B[m HashNode(-50000000, -50000000);[?25l[?12l[?25h7[2;22r8[22d[4S[1;24r[18;5HHashNode <KeyType,ValueType> sentObj = [32mnew[39m(B[m HashNode<KeyType, ValueType>(obj(B[0;7m>[20;5H(B[m@SuppressWarnings([31m"unchecked"[39m(B[m)[21;5H[36mpublic[39m(B[m HashtableMap([32mint[39m(B[m capacity) {[?25l[?12l[?25h7[2;22r8[22d[11S[1;24r[11;9H[32mthis[39m(B[m.tableSize = capacity;[12;9H[32mthis[39m(B[m.buckets = [32mnew[39m(B[m HashNode[capacity];[13;9H[32mthis[39m(B[m.size = 0;[14;5H}[16d[36mpublic[39m(B[m HashtableMap() {[17;9H[34m// with default capacity = 8[18;9H[32mthis[39m(B[m(8);[19;5H}[21d(B[0;1m[34m/**[39m(B[m[?25l[?12l[?25h7[2;22r8[22d[8S[1;24r[14;5H(B[0;1m[34m[1K * hashFunction method calculates the intended index of the given key.[15;5H[1K *[16d[1K * @param key the key whose index you want to find[17;5H[1K * @return the index[18;5H[1K */[19;5H(B[0m[36mprivate[39m(B[m [32mint[39m(B[m hashFunction(KeyType key) {[20;9H[31mreturn[39m(B[m Math.abs(key.hashCode()%tableSize);[21;5H}[?25l[?12l[?25h[8;19r[19;1H[3S[1;24r[2;5H(B[0;1m[34m[1K * @return the index[39m(B[m[K[3;5H(B[0;1m[34m[1K */[39m(B[m[K[4;5H[36mprivate[39m(B[m [32mint[39m(B[m hashFunction(KeyType key) {[K[5;9H[31mreturn[39m(B[m Math.abs(key.hashCode()%tableSize);[8;5H(B[0;1m[34m/**[9;5H[1K *The put method adds a new key-value pair/mapping to this collection. It t[39m(B[0;7m>[10;5H(B[0;1m[34m[1K * if the key or value are null, or if the keys are duplicate of one alread[39m(B[0;7m>[11;8H(B[0;1m[34mIf the load factor exceeds by 0.7, then it rehashes.[39m(B[m[K[13;27H(B[0;1m[34mto be added[39m(B[m[K[14;9H(B[0;1m[34mparam value the value to be added[15;7H @throws IllegalArgumentException when the key or value is null, or if th[39m(B[0;7m>[16;5H(B[0;1m[34m[1K * duplicate of one already stored[39m(B[m[K[17;5H(B[0;1m[34m[1K */[18;5H(B[0m[36mpublic[39m(B[m [32mvoid[39m(B[m put(KeyType key, ValueType value) [36mthrows[39m(B[m IllegalArgumentExcepti(B[0;7m>[20;9H(B[0m[31mif[39m(B[m(key == [33mnull[39m(B[m || value == [33mnull[39m(B[m) {[K[21;12H[1K [31mthrow[39m(B[m [32mnew[39m(B[m IllegalArgumentException([31m"key or value is [33mnull[31m!"[39m(B[m);[?25l[?12l[?25h7[2;22r8[22d[7S[1;24r[15;9H}[17d[31mif[39m(B[m(containsKey(key) == [33mtrue[39m(B[m) {[18;13H[31mthrow[39m(B[m [32mnew[39m(B[m IllegalArgumentException([31m"The keys are duplicate of one a[39m(B[0;7m>[19;9H(B[m}[21dHashNode <KeyType,ValueType> sentObj = [32mnew[39m(B[m HashNode<>(key, value);[?25l[?12l[?25h7[2;22r8[22d[9S[1;24r[13;9H[32mint[39m(B[m index = hashFunction(key);[14;9H[31mwhile[39m(B[m(buckets[index] != [33mnull[39m(B[m) {[15;13H[31mif[39m(B[m(index< buckets.length) {[17;17H[34m//if reaches at the end of the array, then it wraps to the begi[39m(B[0;7m>[18;17H(B[0m[31mif[39m(B[m(index == buckets.length-1) {[19;21Hindex = 0;[20;17H}[21;13H}[?25l[?12l[?25h7[2;22r8[22d[11S[1;24r[11;17Hindex++;[12;9H}[14dbuckets[index] = sentObj;[15;9Hsize++;[17;9H[31mif[39m(B[m(Double.valueOf(size) / Double.valueOf(tableSize) >= loadFactor) {[18;13Hrehash();[19;9H}[20;5H}[21d[?25l[?12l[?25h7[2;22r8[22d
[1;24r[21;5H(B[0;1m[34m/**[39m(B[m[?25l[?12l[?25h7[2;22r8[22d[9S[1;24r[13;5H(B[0;1m[34m[1K * The rehash method resizes the array when the load factor exceeds 0.7.[14;5H[1K * In this method, the array size is doubled and the key-value pairs are re[39m(B[0;7m>[15;5H(B[0;1m[34m[1K * size of the array. The method calls the put method in order to redistrib[39m(B[0;7m>[16;5H(B[0;1m[34m[1K * resized array[17;5H[1K */[18;5H(B[0m[36mpublic[39m(B[m [32mvoid[39m(B[m rehash() {[20;9HtableSize = 2*tableSize;[21;9HHashNode<KeyType, ValueType>[] oldBuckets = buckets;[?25l[?12l[?25h7[2;22r8[22d[4S[1;24r[18;9Hbuckets = [32mnew[39m(B[m HashNode[tableSize];[19;9Hsize = 0;[20;9H[31mfor[39m(B[m([32mint[39m(B[m i=0; i<oldBuckets.length; i++) {[21;13H[31mif[39m(B[m(oldBuckets[i] == [33mnull[39m(B[m) {[?25l[?12l[?25h7[2;22r8[22d[4S[1;24r[18;17H[31mcontinue[39m(B[m;[19;13H}[20dKeyType newKey = oldBuckets[i].getKey();[21;13HValueType newVal = oldBuckets[i].getValue();[?25l[?12l[?25h7[2;22r8[22d
[1;24r[21;13Hput(newKey, newVal);[?25l[?12l[?25h7[2;22r8[22d
[1;24r[21;9H}[?25l[?12l[?25h7[2;22r8[22d[2S[1;24r[20;5H}[21d[?25l[?12l[?25h7[2;22r8[22d[8S[1;24r[14;5H(B[0;1m[34m/**[15;5H[1K * The containsKey method checks whether a key maps to a value within this [39m(B[0;7m>[16;5H(B[0;1m[34m[1K *[17d[1K * @param key the key, which needs to be checked[18;5H[1K * @return true if the key maps to a value within the collection, otherwise[39m(B[0;7m>[19;5H(B[0;1m[34m[1K */[20;5H(B[0m[36mpublic[39m(B[m [32mboolean[39m(B[m containsKey(KeyType key) {[21d[?25l[?12l[?25h7[2;22r8[22d[7S[1;24r[15;9H[32mint[39m(B[m index=0;[16;9H[31mwhile[39m(B[m(index<buckets.length) {[17;13H[31mif[39m(B[m(buckets[index] != [33mnull[39m(B[m && buckets[index].getKey().equals(key) ) {[18;17H[31mreturn[39m(B[m [33mtrue[39m(B[m;[19;13H}[20dindex++;[21;9H}[?25l[?12l[?25h7[2;22r8[22d[2S[1;24r[20;9H[31mif[39m(B[m(key == [33mnull[39m(B[m) {[21;13H[31mreturn[39m(B[m [33mfalse[39m(B[m;[?25l[?12l[?25h[2d[2;9H    }[3d[1K index++;[4;9H}[5;5H    [31mif[39m(B[m(key == [33mnull[39m(B[m) {[6;12H[1K [31mreturn[39m(B[m [33mfalse[39m(B[m;[K[7;8H[1K }[8d[1K [31mreturn[39m(B[m [33mfalse[39m(B[m;[K[9d    }[K[10d[K[11d[K[12;5H(B[0;1m[34m/**[13;5H[1K *The get method returns the value associated with the key entered.[14;5H[1K *[39m(B[m[K[15d(B[0;1m[34m[1K * @param key key, whose value should to be returned[39m(B[m[K[16;5H(B[0;1m[34m[1K * @return the value associated with the key entered[17;5H[1K * @throws NoSuchElementException when key is not stored in this collection[18;5H[1K */[39m(B[m[K[19;5H[36mpublic[39m(B[m ValueType get(KeyType key) [36mthrows[39m(B[m NoSuchElementException {[20d[K[21;9H[31mif[39m(B[m(containsKey(key) == [33mfalse[39m(B[m) {[?25l[?12l[?25h[2;5H(B[0;1m[34m[1K * @param key key, whose value should to be returned[3;5H[1K * @return the value associated with the key entered[4;5H[1K * @throws NoSuchElementException when key is not stored in this collection[5;5H[1K */[39m(B[m[K[6;5H[36mpublic[39m(B[m ValueType get(KeyType key) [36mthrows[39m(B[m NoSuchElementException {[7d[K[8;9H[31mif[39m(B[m(containsKey(key) == [33mfalse[39m(B[m) {[9;12H[1K [31mthrow[39m(B[m [32mnew[39m(B[m NoSuchElementException([31m"ERROR! The key is not stored in t[39m(B[0;7m>[10;9H(B[m}[11d[32mint[39m(B[m index = hashFunction(key);[12;5H    [31mwhile[39m(B[m(index < buckets.length) {[13;12H[1K [31mif[39m(B[m (buckets[index] != [33mnull[39m(B[m && buckets[index].getKey().equals(key)) {[14;20H[1K [31mreturn[39m(B[m buckets[index].getValue();[15;12H[1K }[K[16d[1K index = (index + 1) % tableSize;[K[17d[K[18;12H[1K [34m//if reaches at the end of the array, then it wraps to the beginnin[39m(B[0;7m>[19;12H(B[m[1K [31mif[39m(B[m(index == buckets.length-1) {[K[20;17Hindex = 0;[21;9H    }[K[?25l[?12l[?25h7[2;22r8[22d[2S[1;24r[20;9H}[21d[31mreturn[39m(B[m [33mnull[39m(B[m;[?25l[?12l[?25h[2;12H[1K }[K[3d[1K index = (index + 1) % tableSize;[4d[K[5;13H[34m//if reaches at the end of the array, then it wraps to the beginnin[39m(B[0;7m>[6;9H(B[m    [31mif[39m(B[m(index == buckets.length-1) {[7;13H    index = 0;[K[8d[8;9H    }[9;9H}[K[10d[31mreturn[39m(B[m [33mnull[39m(B[m;[K[11;5H}[K[12d[K[13d[K[14;5H(B[0;1m[34m/**[39m(B[m[K[15;5H(B[0;1m[34m[1K * remove the mapping for a given key from this collection[16;5H[1K *[39m(B[m[K[17d(B[0;1m[34m[1K * @param key the key who key-value pair should be removed[18;5H[1K * @return the value of the removed key-value pair[19;5H[1K * @throws NoSuchElementException when key is not stored in this collection[20;5H[1K */[39m(B[m[K[21;5H[36mpublic[39m(B[m ValueType remove(KeyType key) [36mthrows[39m(B[m NoSuchElementException {[?25l[?12l[?25h7[2;22r8[22d[3S[1;24r[20;9H[31mif[39m(B[m(key == [33mnull[39m(B[m || containsKey(key) == [33mfalse[39m(B[m) {[21;13H[31mthrow[39m(B[m [32mnew[39m(B[m NoSuchElementException([31m"ERROR! The key is not stored in t[39m(B[0;7m>[21;1H(B[m[?25l[?12l[?25h[2;5H(B[0;1m[34m[1K * @return the value of the removed key-value pair[39m(B[m[K[3;5H(B[0;1m[34m[1K * @throws NoSuchElementException when key is not stored in this collection[4;5H[1K */[39m(B[m[K[5;5H[36mpublic[39m(B[m ValueType remove(KeyType key) [36mthrows[39m(B[m NoSuchElementException {[6d[K[7;9H[31mif[39m(B[m(key == [33mnull[39m(B[m || containsKey(key) == [33mfalse[39m(B[m) {[8;12H[1K [31mthrow[39m(B[m [32mnew[39m(B[m NoSuchElementException([31m"ERROR! The key is not stored in t[39m(B[0;7m>[9;9H(B[m}[10d[32mint[39m(B[m index = hashFunction(key);[11;5H    ValueType value = [33mnull[39m(B[m;[12;8H[1K [32mint[39m(B[m startIndex = index;[K[13;8H[1K [31mwhile[39m(B[m(index<buckets.length) {[14;12H[1K [31mif[39m(B[m(buckets[index] != [33mnull[39m(B[m) {[K[15;16H[1K [31mif[39m(B[m (buckets[index].getKey().equals(key)) {[16;20H[1K value = buckets[index].getValue();[K[17;20H[1K buckets[index] = sentObj;[18;20H[1K size--;[K[19;21H[31mreturn[39m(B[m value;[20;16H[1K }[K[21;13H}[K[?25l[?12l[?25h7[2;22r8[22d
[1;24r[21;13Hindex = (index + 1) % getCapacity();[?25l[?12l[?25h7[2;22r8[22d[2S[1;24r[20;13H[31mif[39m(B[m(index == startIndex) {[21;17H[31mbreak[39m(B[m;[?25l[?12l[?25h[2;20H[1K value = buckets[index].getValue();[K[3;21Hbuckets[index] = sentObj;[4;20H[1K size--;[K[5;20H[1K [31mreturn[39m(B[m value;[K[6;16H[1K }[7;9H    }[K[8;9H    index = (index + 1) % getCapacity();[9;9H    [31mif[39m(B[m(index == startIndex) {[10;16H[1K [31mbreak[39m(B[m;[K[11;13H}[K[12d[K[13;13H[34m//if reaches at the end of the array, then it wraps to the beginnin[39m(B[0;7m>[14;13H(B[0m[31mif[39m(B[m(index == buckets.length-1) {[K[15;17Hindex = 0;[K[16;13H}[K[17;9H}[K[18d[31mreturn[39m(B[m value;[19;5H}[K[20d[K[21;5H(B[0;1m[34m/**[39m(B[m[K[?25l[?12l[?25h7[2;22r8[22d[2S[1;24r[20;5H(B[0;1m[34m[1K * remove all key-value pairs from this collection[21;5H[1K */[39m(B[m[?25l[?12l[?25h7[2;22r8[22d[6S[1;24r[16;5H[36mpublic[39m(B[m [32mvoid[39m(B[m clear() {[18;9H[31mfor[39m(B[m ([32mint[39m(B[m i = 0; i < buckets.length; i++) {[19;13Hbuckets[i] = [33mnull[39m(B[m;[20;9H}[21dsize = 0;[?25l[?12l[?25h7[2;22r8[22d[5S[1;24r[17;5H}[20d(B[0;1m[34m/**[21;5H[1K * retrieve the number of keys stored within this collection[39m(B[m[?25l[?12l[?25h[2;13Hbuckets[i] = [33mnull[39m(B[m;[3;9H}[K[4dsize = 0;[5;5H}[K[6d[K[9;10H(B[0;1m[34mtrieve the number of keys stored within this collection[10;7H @return the number of key-value pairs present[11;5H[1K */[39m(B[m[K[12;5H[36mpublic[39m(B[m [32mint[39m(B[m getSize() {[13;9H[31mreturn[39m(B[m size;[K[14;5H}[K[15d[K[16d[K[17;5H(B[0;1m[34m/**[18;5H[1K * retrieve this collection's capacity (size of its underlying array)[19;5H[1K *[20d[1K * @return the size of the hashtable[21;7H/[39m(B[m[K[?25l[?12l[?25h7[2;22r8[22d
[1;24r[21;5H[36mpublic[39m(B[m [32mint[39m(B[m getCapacity() {[?25l[?12l[?25h7[2;22r8[22d[4S[1;24r[18;9H[31mreturn[39m(B[m tableSize;[19;5H}[20d}[21d[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[22d(B[0;7mSave modified buffer?                                                           [23;1H Y(B[m Yes[K[24d(B[0;7m N(B[m No  [14G   (B[0;7m^C(B[m Cancel[K[22;23H[?12l[?25h[?25l[23d(B[0;7m^G(B[m Help[23;21H(B[0;7mM-D(B[m DOS Format[41G(B[0;7mM-A(B[m Append[23;61H(B[0;7mM-B(B[m Backup File[24d(B[0;7m^C(B[m Cancel[17G    (B[0;7mM-M(B[m Mac Format[41G(B[0;7mM-P(B[m Prepend[24;61H(B[0;7m^T(B[m Browse[22d(B[0;7mFile Name to Write: HashtableMap.java(B[m[?12l[?25h[?25l[33G[1K (B[0;7m[ Writing... ](B[m[K[1;53H(B[0;7m [79G(B[m[22;31H(B[0;7m[ Wrote 229 lines ](B[m[J[24d[?12l[?25h[24;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h[ark@vm-instunix-03] (11)$ git status
[?2004lOn branch BackendDeveloper
Your branch is up to date with 'origin/BackendDeveloper'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   log[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   HashtableMap.java[m
	[31mmodified:   log[m

[?2004h[ark@vm-instunix-03] (12)$ git add HashtablleM[K[K[KeMap.java
[?2004l[?2004h[ark@vm-instunix-03] (13)$ git commint[K[Kt -m ""u"p"l"o"a"d"i"n"g" "H"a"s"h"t"a"b"l"e"M"a"p"."j"a"v"a"[C
[?2004l[BackendDeveloper 5ede281] uploading HashtableMap.java
 2 files changed, 244 deletions(-)
 rewrite log (100%)
[?2004h[ark@vm-instunix-03] (14)$ git status
[?2004lOn branch BackendDeveloper
Your branch is ahead of 'origin/BackendDeveloper' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   log[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004h[ark@vm-instunix-03] (15)$ git add log[K[K[K[K[K[K[Kcommit [K[K[K[K[K[K[Kadd log
[?2004l[?2004h[ark@vm-instunix-03] (16)$ git commit -m ""r"e"u"p"l"o"a"d"i"n"g" "l"o"g"
[?2004l[BackendDeveloper e168f6e] reuploading log
 1 file changed, 243 insertions(+)
[?2004h[ark@vm-instunix-03] (17)$ gi [Kt status
[?2004lOn branch BackendDeveloper
Your branch is ahead of 'origin/BackendDeveloper' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
[?2004h[ark@vm-instunix-03] (18)$ [7mgit log -1[27mgit log -1
[?2004l[?1h=[33mcommit e168f6e7a23995d59801a1fef186392582e70162[m[33m ([m[1;36mHEAD -> [m[1;32mBackendDeveloper[m[33m)[m[m
Author: Ark Dutt <dutt3@wisc.edu>[m
Date:   Thu Feb 16 18:21:43 2023 -0600[m
[m
    reuploading log[m
[K[?1l>[?2004h[ark@vm-instunix-03] (19)$ [7mrm -f *.class[27mrm -f *.class
[?2004l[?2004h[ark@vm-instunix-03] (20)$ ls
[?2004lCHSearchBackendBD.java                    log
CHSearchBackendInterface.java             MapADT.java
CHSearchBackendTest.java                  PostBD.java
HashNode.java                             PostInterface.java
HashtableMap.java                         PostReaderBD.java
HashtableWithDuplicateKeysBD.java         PostReaderInterface.java
HashtableWithDuplicateKeysInterface.java  role.txt
[?2004h[ark@vm-instunix-03] (21)$ [7mjavac *.java[27mjavac *.java
[?2004lNote: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
[?2004h[ark@vm-instunix-03] (22)$ javac[K[K[K[K[K[7mjavac *.java[27mjavac *.java [7m-Xlint[27m-Xlint
[?2004lHashtableMap.java:25: warning: [rawtypes] found raw type: HashNode
    HashNode<KeyType, ValueType> obj = new HashNode(-50000000, -50000000);
                                           ^
  missing type arguments for generic class HashNode<KeyType,ValueType>
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashNode
    ValueType extends Object declared in class HashNode
HashtableMap.java:25: warning: [unchecked] unchecked call to HashNode(KeyType,ValueType) as a member of the raw type HashNode
    HashNode<KeyType, ValueType> obj = new HashNode(-50000000, -50000000);
                                       ^
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashNode
    ValueType extends Object declared in class HashNode
HashtableMap.java:25: warning: [unchecked] unchecked conversion
    HashNode<KeyType, ValueType> obj = new HashNode(-50000000, -50000000);
                                       ^
  required: HashNode<KeyType,ValueType>
  found:    HashNode
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashtableMap
    ValueType extends Object declared in class HashtableMap
HashtableMap.java:31: warning: [rawtypes] found raw type: HashNode
        this.buckets = new HashNode[capacity];
                           ^
  missing type arguments for generic class HashNode<KeyType,ValueType>
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashNode
    ValueType extends Object declared in class HashNode
HashtableMap.java:101: warning: [rawtypes] found raw type: HashNode
        buckets = new HashNode[tableSize];
                      ^
  missing type arguments for generic class HashNode<KeyType,ValueType>
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashNode
    ValueType extends Object declared in class HashNode
HashtableMap.java:101: warning: [unchecked] unchecked conversion
        buckets = new HashNode[tableSize];
                  ^
  required: HashNode<KeyType,ValueType>[]
  found:    HashNode[]
  where KeyType,ValueType are type-variables:
    KeyType extends Object declared in class HashtableMap
    ValueType extends Object declared in class HashtableMap
HashtableWithDuplicateKeysBD.java:29: warning: [unchecked] unchecked cast
        list.add((ValueType) post1);
                             ^
  required: ValueType
  found:    PostBD
  where ValueType is a type-variable:
    ValueType extends Object declared in class HashtableWithDuplicateKeysBD
HashtableWithDuplicateKeysBD.java:30: warning: [unchecked] unchecked cast
        list.add((ValueType) post2);
                             ^
  required: ValueType
  found:    PostBD
  where ValueType is a type-variable:
    ValueType extends Object declared in class HashtableWithDuplicateKeysBD
8 warnings
[?2004h[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-instunix-03] (23)$ [K[ark@vm-ins